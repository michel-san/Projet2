package com.openclassrooms.magicgithub.api;

import com.openclassrooms.magicgithub.model.User;
import com.openclassrooms.magicgithub.ui.user_list.ListUserActivity;

import java.util.List;
import java.util.Random;

import static com.openclassrooms.magicgithub.api.FakeApiServiceGenerator.FAKE_USERS_RANDOM;
import static com.openclassrooms.magicgithub.api.FakeApiServiceGenerator.generateUsers;

public class FakeApiService implements ApiService {

    private List<User> users = generateUsers();
    private ApiService apiService;

    /**
     * Return a list of {@link User}
     * (renvoyer une liste utilisateur)
     * Those users must be generated by {@link FakeApiServiceGenerator}
     * (ces utilisateurs doivent être générés par FakeApiserviceGenerator)
     */
    @Override
    public List<User> getUsers() {
        // TODO: A modifier (obtenir un utilisateur)

        return users;
        // alors retour utilisateur
    }

    /**
     * Generate a random {@link User} and add it {@link FakeApiService#users} list.
     * (générez alétoirement  User et l'ajouter à FakeApiservice#users
     * This user must be get from the {@link FakeApiServiceGenerator#FAKE_USERS_RANDOM} list.
     * (ces utilisateurs doivent provenir de FakeApiServiceGenerator#FAKE_USERS_RANDOM)
     */
    @Override
    public void generateRandomUser() {
        // TODO: A modifier (générer un utilisateur aléatoirement et l'ajouter)
        User user = User.random();
        users.add(user);

    }


    /**
     * Delete a {@link User} from the {@link FakeApiService#users} list.(supprimer un utilisateur provenantde list FakeApiService#users)
     */
    @Override
    public void deleteUser(User user) {
        // TODO: A modifier (supprimer un utilisateur)
        users.remove(user);
    }
}
